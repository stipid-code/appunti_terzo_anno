Martedì 14:45 \to 15:45
Giovedì 8:30 e boh ci sarà un intervallo

* Programma del corso
** Codici lineari(principalmente)
  Su campi finiti, prevalentemente, buona parte del corso a definirili
  e farci
  - Introduzione al problema della decodifica (perchè ci interessa)
  - Proprietà generali (codici non necessariamente
    lineari/strutturati)
    - Distanza del codice o boh
  - Codici lineari preliminair di algebra, codici lineari, decodifiche
    e boh
  - Disuguaglianze per codici, bounds per codici, alcuni solo per
    codici, altri per codici lineari
  - Importanti esempii di codici
    - famiglia deii codici di Hamming
    - di Reed-Solomon
  - Codici cilclici e lavoro di decodifice

Un codice è un sottinsieme, una n-upla di un alfabeto finito
man mano che a questi codici aggiungi proprietà, magari sono spazii
vettoriali, e diventano più facili da trattare.

per questa parte del programma il libro consigliato è
S.Ling, C.Xing
Coding Theory: a frist theory, Cambridge Univ. Press, 2004
(Anche edizioni dopo, boh)
Libro non necessario se prendi appunti

(utilizzo di algebra lineari)

** Intorduzoine alla computazione quantistica
  - Preliminari sugli spazii di Hilbert separabili
    *HILBEEEEERT*
    e operatori lineari (infinito-dimensionali)
  - Assiomi della meccanica quantistica
  - Qubits (paricolari sistemi di stocazzo)
  - Universalità per porte quantistiche
  - Teorema di Shor (Algoritmo di Shor, che cazzo è)

* L'esame
L'esame è solo orale sulla parte sui codici, in passato qualcuno ha
anche usufruito sul fare qualche seminario di calcolo quantistico,
quindi l'esame era l'affare del seminario, bello bello.
Se fai il seminario comunque una parte di codici la fai lo stesso.

* Introduzione al problema della decodifica
** Facciamo sta cosa
Esempio di codifica, decodifica
Sud \leftrightarrow 00
Nord \leftrightarrow 10 
Est \leftrightarrow 01
Ovest \leftrightarrow 11

Implicitamente, il canale è un'applicazoine \mathbb{F} \to \mathbb{F}

Il canale presenta del rumore che non posso togliere,
magari mando 00 (Sud) e il rumore me lo altera fino a un bit
può andare a (essere ricevuto come)
 - 00
 - 01
 - 10
se il rumore lo altera fino a 2 bit posso ricevere di tutto

** Ma non funziona
Se faccio codifica e decodifica immediata, ingenua, non posso capire
se c'è stato un errore, tantomeno correggerlo
 1. non riesco a segnalare possibili errori di trasmissione (no error detection)
 2. non riesco (tantomeno) a correggere gli errori (no error
    correction)
Allora aggiungiamo una codifica    

** Quindi facciamo con codifica
Mettiamo una codifica di cananle dopo quella originale
Mettiamo una decodifica di canale prima di quella originale

Puoi vederlo come un'espanzione del canale o delle codifiche, cazzo
vuoi

*** Decodifica di canale
  - 00 \leftrightarrow 000
  - 10 \leftrightarrow 101
  - 01 \leftrightarrow 011
  - 11 \leftrightarrow 110
Aggiungo un terzo bit dopo, somma dei prededenti

*** Decodifica di canale
Se non hai informazioni extra sul canale/rumore l'unica decodifica
valida in generale senza ulteriori informazioni sul rumore è la
cosiddetta decodifica della distanza

*Decodifica a minima distanza*
*Minimum distance decoding*

Definiamo la distanza di *HAMMING BOIIII* tra due cosi come il numero
di bit che non c'hai uguali.
quindi qui abbiamo due triplette di bit
 - x_1 x_2 x_3
 - y_1 y_2 y_3
La distanza di hamming è il numero di bit diversi tra x e y

Vedi quale elemento del codice ha distanza minore tra quello e il coso
ricevuto, e prendi quello.

Come puoi vedere il codice è un sottinsieme di \mathbb{F}_2^2

**** Decodifica a minima distanza
_mdd:_, decodifico y tale che la distanza tra y a x sia minima
d(y,x) = min_{x \in C} d(y,x)
Se c'è ambiguità vai alla /cazzo di cane/

*** Hey funziona!
Ho la solita codifica
  - 00 \leftrightarrow 000
  - 10 \leftrightarrow 101
  - 01 \leftrightarrow 011
  - 11 \leftrightarrow 110

mando un nord \to 10 \to 101
101 lo mando per un canale che ha al massimo un bit di rumore, ne può
uscire
 - 101 \in codice
 - 001 \notin codice (error detection)
 - 111 \notin codice (error detection)
 - 100 \notin codice (error detection)

Ma non posso correggere univocamente l'errore in quanto esistono più
elementi del codice che realizzano la distanza minima tra y e
quell'elemento.
000 e 101 realizzano entrambi la distanza minima (1) da 001
se mi arriva 001 si tira alla /cazzo di cane/

**** Esercizio
Se il canale può sbagliarmi anche 2 volte che succede?
magari mando uno 101 e poi arriva uno 000, non mi posso neanche
accorgere dell'errore

Mettiamo codifica
 - 00 \leftrightarrow 00000
 - 01 \leftrightarrow 01111
 - 10 \leftrightarrow 10110
 - 11 \leftrightarrow 11001

in che modo migliora la siguazione di _mdd_   
vediamo la distanza minima tra due parole del codice
d(c), in questo caso è di 3 bit, non ci sono due parole più vicine di
3 bit.
[ d(C) = 3 ]

Aumentando l'n tale che includiamo \mathbb{F}_2^2 in \mathbb{F}_2^n
segnagliamo più errori e ne correggiamo
Ma se faccimao un n gigantesco ho un canale gigantesco
ci vuole un compromesso fra N grande e codice \mathbb{F}_2^N e
costo/ velocità/ velocità di decodifica di trasmissione nel canale. 

Di tale compromesso si occupa la teoria dei codici.

* Definizioni Generali
Un alfabeto A è un insieme finito
A = {a_1, ..., a_q}
q:= #(A) si dice *taglia dell'alfabeto*

[Notazione A_q è alfabeto con #(A) = q]

Un codice di lunghezza n è un sottinsieme C sottinsieme di A_q^n
E #(C)
